/** ==================================================================
 * cros2_markerarray_support.hpp
 * Class for interfacing a native Connext DDS application with the 
 *  ROS 2 visualization_msgs::msg::dds_::MarkerArray_ data type.
 * This program uses the C++11 option of RTIDDSGen, using the type
 *  support source code generated by the command line:
 *   rtiddsgen -language C++11 <arch> cros2_types.idl
 **/

#ifndef __CROS2_MARKERARRAY_SUPPORT_HPP__
#define __CROS2_MARKERARRAY_SUPPORT_HPP__
#include "cros2_common.hpp"             // common includes and defs
#include "visualization_msgs/msg/MarkerArrayPlugin.hpp"

/** ----------------------------------------------------------------
 * cros2markerarray class
 * This class supports ROS2 markerarray
 * ------------------------------------------------------------- **/
class cros2markerarray
{
public:
    cros2markerarray(const std::string markerarrayName, uint32_t opt_en, dds::domain::DomainParticipant participant);
    ~cros2markerarray();


    void publish(void);
    visualization_msgs::msg::dds_::MarkerArray_ *sample_to_pub(void) { return &pub_sample; }

    // markerarray data sample accessors
    void pub_sample_size_set(int32_t newSize) { pub_sample.markers().resize(newSize); }
    visualization_msgs::msg::dds_::Marker_ *pub_sample_get_ptr(void) { return pub_sample.markers().data(); }
    int data_rcv_count_get(void) { return data_rcv_count; }

private:
    // DDS receive data handler
    int rcv_dataProc(dds::sub::DataReader<visualization_msgs::msg::dds_::MarkerArray_> & reader);

    // DDS Topic, DataWriter, DataReader, Sample(for publish)
    dds::topic::Topic<visualization_msgs::msg::dds_::MarkerArray_> data_topic;
    dds::pub::DataWriter<visualization_msgs::msg::dds_::MarkerArray_> data_wr;
    dds::sub::DataReader<visualization_msgs::msg::dds_::MarkerArray_> data_rd;
    visualization_msgs::msg::dds_::MarkerArray_ pub_sample;

    // misc
    dds::core::cond::WaitSet waitset;
    int data_rcv_count;
};
#endif  // ndef __CROS2_markerarray_SUPPORT_HPP__